{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ammar\\\\Desktop\\\\github-doctor\\\\doctor-dashboard\\\\src\\\\pages\\\\PatientDetail.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsPDF } from \"jspdf\";\nimport { QRCodeCanvas } from \"qrcode.react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PatientDetail() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [patient, setPatient] = useState(null);\n  useEffect(() => {\n    const fetchPatient = async () => {\n      try {\n        const response = await axios.get(`http://localhost:4600/api/auth/patient-card/${id}`);\n        setPatient(response.data);\n      } catch (error) {\n        console.error(\"Error fetching patient data:\", error);\n      }\n    };\n    fetchPatient();\n  }, [id]);\n  const generateTokenSlip = () => {\n    if (!patient) return;\n    const doc = new jsPDF();\n    doc.setFontSize(16);\n    doc.text(\"Patient Token Slip\", 105, 15, null, null, \"center\");\n    doc.setFontSize(12);\n    doc.text(`Date: ${new Date().toLocaleDateString()}`, 10, 25);\n    doc.text(`Token Number: ${id}`, 10, 35);\n    doc.text(`Patient Name: ${patient.name}`, 10, 45);\n    doc.text(`Phone Number: ${patient.phoneNumber}`, 10, 55);\n    doc.text(`Blood Type: ${patient.blood}`, 10, 65);\n\n    // QR Code\n    const qrData = `http://localhost:4600/patient-full-detail/${id}`;\n    const qrCanvas = document.createElement(\"canvas\");\n    const qr = new QRCodeCanvas({\n      value: qrData,\n      size: 100\n    });\n    qr.toDataURL(\"image/png\", 1.0, dataUrl => {\n      doc.addImage(dataUrl, \"PNG\", 80, 75, 50, 50);\n      doc.save(`Token_Slip_${patient.name}.pdf`);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto p-6 bg-white shadow-md rounded-lg\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => navigate(-1),\n      className: \"mb-4 px-4 py-2 bg-gray-400 text-white rounded\",\n      children: \"Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-semibold mb-4\",\n      children: [patient === null || patient === void 0 ? void 0 : patient.name, \"'s Details\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center items-center flex-col\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"font-semibold\",\n        children: \"Scan QR for Full Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(QRCodeCanvas, {\n        value: `http://localhost:4600/patient-full-detail/${id}`,\n        size: 120\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: generateTokenSlip,\n      className: \"mt-4 px-4 py-2 bg-green-500 text-white rounded\",\n      children: \"Generate Token Slip\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(PatientDetail, \"okfy1A9b/9bd5T5ZRMC9PjK4sSg=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = PatientDetail;\nexport default PatientDetail;\nvar _c;\n$RefreshReg$(_c, \"PatientDetail\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","axios","jsPDF","QRCodeCanvas","jsxDEV","_jsxDEV","PatientDetail","_s","id","navigate","patient","setPatient","fetchPatient","response","get","data","error","console","generateTokenSlip","doc","setFontSize","text","Date","toLocaleDateString","name","phoneNumber","blood","qrData","qrCanvas","document","createElement","qr","value","size","toDataURL","dataUrl","addImage","save","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Ammar/Desktop/github-doctor/doctor-dashboard/src/pages/PatientDetail.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { jsPDF } from \"jspdf\";\r\nimport { QRCodeCanvas } from \"qrcode.react\";\r\n\r\nfunction PatientDetail() {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const [patient, setPatient] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchPatient = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:4600/api/auth/patient-card/${id}`);\r\n        setPatient(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching patient data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchPatient();\r\n  }, [id]);\r\n\r\n  const generateTokenSlip = () => {\r\n    if (!patient) return;\r\n\r\n    const doc = new jsPDF();\r\n    doc.setFontSize(16);\r\n    doc.text(\"Patient Token Slip\", 105, 15, null, null, \"center\");\r\n\r\n    doc.setFontSize(12);\r\n    doc.text(`Date: ${new Date().toLocaleDateString()}`, 10, 25);\r\n    doc.text(`Token Number: ${id}`, 10, 35);\r\n    doc.text(`Patient Name: ${patient.name}`, 10, 45);\r\n    doc.text(`Phone Number: ${patient.phoneNumber}`, 10, 55);\r\n    doc.text(`Blood Type: ${patient.blood}`, 10, 65);\r\n\r\n    // QR Code\r\n    const qrData = `http://localhost:4600/patient-full-detail/${id}`;\r\n    const qrCanvas = document.createElement(\"canvas\");\r\n    const qr = new QRCodeCanvas({\r\n      value: qrData,\r\n      size: 100,\r\n    });\r\n\r\n    qr.toDataURL(\"image/png\", 1.0, (dataUrl) => {\r\n      doc.addImage(dataUrl, \"PNG\", 80, 75, 50, 50);\r\n      doc.save(`Token_Slip_${patient.name}.pdf`);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mx-auto p-6 bg-white shadow-md rounded-lg\">\r\n      <button onClick={() => navigate(-1)} className=\"mb-4 px-4 py-2 bg-gray-400 text-white rounded\">\r\n        Back\r\n      </button>\r\n\r\n      <h2 className=\"text-2xl font-semibold mb-4\">{patient?.name}'s Details</h2>\r\n\r\n      <div className=\"flex justify-center items-center flex-col\">\r\n        <p className=\"font-semibold\">Scan QR for Full Details</p>\r\n        <QRCodeCanvas value={`http://localhost:4600/patient-full-detail/${id}`} size={120} />\r\n      </div>\r\n\r\n      <button\r\n        onClick={generateTokenSlip}\r\n        className=\"mt-4 px-4 py-2 bg-green-500 text-white rounded\"\r\n      >\r\n        Generate Token Slip\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PatientDetail;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AACzD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,QAAQ,OAAO;AAC7B,SAASC,YAAY,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM;IAAEC;EAAG,CAAC,GAAGT,SAAS,CAAC,CAAC;EAC1B,MAAMU,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd,MAAMe,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAC,+CAA+CN,EAAE,EAAE,CAAC;QACrFG,UAAU,CAACE,QAAQ,CAACE,IAAI,CAAC;MAC3B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACtD;IACF,CAAC;IAEDJ,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,CAACJ,EAAE,CAAC,CAAC;EAER,MAAMU,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,IAAI,CAACR,OAAO,EAAE;IAEd,MAAMS,GAAG,GAAG,IAAIjB,KAAK,CAAC,CAAC;IACvBiB,GAAG,CAACC,WAAW,CAAC,EAAE,CAAC;IACnBD,GAAG,CAACE,IAAI,CAAC,oBAAoB,EAAE,GAAG,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,CAAC;IAE7DF,GAAG,CAACC,WAAW,CAAC,EAAE,CAAC;IACnBD,GAAG,CAACE,IAAI,CAAC,SAAS,IAAIC,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IAC5DJ,GAAG,CAACE,IAAI,CAAC,iBAAiBb,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IACvCW,GAAG,CAACE,IAAI,CAAC,iBAAiBX,OAAO,CAACc,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IACjDL,GAAG,CAACE,IAAI,CAAC,iBAAiBX,OAAO,CAACe,WAAW,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IACxDN,GAAG,CAACE,IAAI,CAAC,eAAeX,OAAO,CAACgB,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;;IAEhD;IACA,MAAMC,MAAM,GAAG,6CAA6CnB,EAAE,EAAE;IAChE,MAAMoB,QAAQ,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;IACjD,MAAMC,EAAE,GAAG,IAAI5B,YAAY,CAAC;MAC1B6B,KAAK,EAAEL,MAAM;MACbM,IAAI,EAAE;IACR,CAAC,CAAC;IAEFF,EAAE,CAACG,SAAS,CAAC,WAAW,EAAE,GAAG,EAAGC,OAAO,IAAK;MAC1ChB,GAAG,CAACiB,QAAQ,CAACD,OAAO,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;MAC5ChB,GAAG,CAACkB,IAAI,CAAC,cAAc3B,OAAO,CAACc,IAAI,MAAM,CAAC;IAC5C,CAAC,CAAC;EACJ,CAAC;EAED,oBACEnB,OAAA;IAAKiC,SAAS,EAAC,qDAAqD;IAAAC,QAAA,gBAClElC,OAAA;MAAQmC,OAAO,EAAEA,CAAA,KAAM/B,QAAQ,CAAC,CAAC,CAAC,CAAE;MAAC6B,SAAS,EAAC,+CAA+C;MAAAC,QAAA,EAAC;IAE/F;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAETvC,OAAA;MAAIiC,SAAS,EAAC,6BAA6B;MAAAC,QAAA,GAAE7B,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEc,IAAI,EAAC,YAAU;IAAA;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAE1EvC,OAAA;MAAKiC,SAAS,EAAC,2CAA2C;MAAAC,QAAA,gBACxDlC,OAAA;QAAGiC,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAC;MAAwB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACzDvC,OAAA,CAACF,YAAY;QAAC6B,KAAK,EAAE,6CAA6CxB,EAAE,EAAG;QAACyB,IAAI,EAAE;MAAI;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClF,CAAC,eAENvC,OAAA;MACEmC,OAAO,EAAEtB,iBAAkB;MAC3BoB,SAAS,EAAC,gDAAgD;MAAAC,QAAA,EAC3D;IAED;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACrC,EAAA,CAnEQD,aAAa;EAAA,QACLP,SAAS,EACPC,WAAW;AAAA;AAAA6C,EAAA,GAFrBvC,aAAa;AAqEtB,eAAeA,aAAa;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}